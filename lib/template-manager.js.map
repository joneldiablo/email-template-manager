{"version":3,"sources":["../src/template-manager.js"],"names":["TemplateManager","filePath","data","encoding","tm","key","func","fs","readFile","catch","console","error","e","templateContent","compile","Handlebars","html","removeAttributeQuotes","collapseWhitespace","trimCustomFragments","minifyCSS","minifyJS","template","r","erros","log","errors","pug","render","path","extname","t","mjml","handlebars","version","bitmap","readFileSync","toreturn","mime","getType","Buffer","toString"],"mappings":"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","file":"template-manager.js","sourcesContent":["import fs from \"fs-extra\";\nimport Handlebars from \"handlebars\";\nimport mime from 'mime/lite';\nimport mjml2html from \"mjml\";\nimport pug from \"pug\";\nimport isValidPath from \"is-valid-path\";\nimport path from \"path\";\nimport {\n  minify\n} from 'html-minifier';\nimport { version } from \"../package.json\";\n\nexport default class TemplateManager {\n\n  /**\n   * \n   * @param {*} filePath \n   * @param {*} data \n   * @param {*} encoding \n   */\n  constructor(filePath, data, encoding = 'utf8') {\n    let tm = this;\n    tm.filePath = filePath;\n    tm.data = data;\n    tm.encoding = encoding;\n    for (const key in tm.data) {\n      if (typeof tm.data[key] === 'function') {\n        let func = tm.data[key];\n        tm.data[key] = () => func(tm);\n      }\n    }\n  }\n\n  /**\n   * \n   * @param {*} filePath \n   */\n  static embedSrc(filePath) {\n    // read binary data\n    var bitmap = fs.readFileSync(filePath);\n    var toreturn = \"data:\" + mime.getType(filePath) + \";base64,\" + new Buffer(bitmap).toString('base64')\n    // convert binary data to base64 encoded string\n    return toreturn;\n  }\n\n  /**\n   * \n   * @param {*} filePath \n   * @param {*} encoding \n   */\n  readFile(filePath = this.filePath, encoding = this.encoding) {\n    if (!isValidPath(filePath))\n      return filePath;\n    return fs.readFile(filePath, encoding)\n      .catch(e => {\n        console.error(e);\n        return '';\n      });\n  }\n\n  /**\n   * \n   * @param {*} filePath \n   * @param {*} data \n   * @param {*} encoding \n   */\n  async handlebars(filePath = this.filePath, data = this.data, encoding = this.encoding) {\n    const tm = this;\n    let templateContent = await tm.readFile(filePath, encoding);\n    let compile = Handlebars.compile(templateContent);\n    let html = minify(compile(data), {\n      removeAttributeQuotes: true,\n      collapseWhitespace: true,\n      trimCustomFragments: true,\n      minifyCSS: true,\n      minifyJS: true\n    });\n    return html;\n  }\n\n  /**\n   * \n   * @param {*} filePath \n   * @param {*} encoding \n   */\n  async mjml(filePath = this.filePath, encoding = this.encoding) {\n    let template = await this.readFile(filePath, encoding);\n    let r = mjml2html(template);\n    if (r.erros) {\n      console.log(r.errors);\n    }\n    return r.html;\n  }\n\n  /**\n   * \n   * @param {*} [data] \n   * @param {*} [filePath] \n   */\n  async pug(filePath = this.filePath, data = this.data, encoding = this.encoding) {\n    let template = await this.readFile(filePath, encoding);\n    return pug.render(template, data);\n  }\n\n  async render(filePath = this.filePath, data = this.data, encoding = this.encoding) {\n    switch (path.extname(filePath)) {\n      case '.pug':\n        let t = await this.pug(filePath, data);\n        return this.mjml(t);\n      case '.mjml':\n        return this.mjml(filePath);\n      default:\n        return this.handlebars(filePath, data, encoding);\n    }\n  }\n\n  /**\n   * \n   */\n  get version() {\n    return version\n  }\n\n}"]}